<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.henghao.domain.dao.ICarItudeDao" >

  <!-- 逆向生成工具自带 Start-->
  <resultMap id="BaseResultMap" type="com.henghao.domain.entity.CarItude" >
    <id column="car_test_id" property="carTestId" jdbcType="INTEGER" />
    <result column="car_latitude" property="carLatitude" jdbcType="VARCHAR" />
    <result column="car_longitude" property="carLongitude" jdbcType="VARCHAR" />
    <result column="car_num" property="carNum" jdbcType="VARCHAR" />
    <result column="car_upTime" property="carUptime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    car_test_id, car_latitude, car_longitude, car_num, car_upTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.henghao.domain.example.CarItudeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sa_test_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sa_test_car
    where car_test_id = #{carTestId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sa_test_car
    where car_test_id = #{carTestId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.henghao.domain.example.CarItudeExample" >
    delete from sa_test_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.henghao.domain.entity.CarItude" >
    insert into sa_test_car (car_test_id, car_latitude, car_longitude, 
      car_num, car_upTime)
    values (#{carTestId,jdbcType=INTEGER}, #{carLatitude,jdbcType=VARCHAR}, #{carLongitude,jdbcType=VARCHAR}, 
      #{carNum,jdbcType=VARCHAR}, #{carUptime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.henghao.domain.entity.CarItude" >
    insert into sa_test_car
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="carTestId != null" >
        car_test_id,
      </if>
      <if test="carLatitude != null" >
        car_latitude,
      </if>
      <if test="carLongitude != null" >
        car_longitude,
      </if>
      <if test="carNum != null" >
        car_num,
      </if>
      <if test="carUptime != null" >
        car_upTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="carTestId != null" >
        #{carTestId,jdbcType=INTEGER},
      </if>
      <if test="carLatitude != null" >
        #{carLatitude,jdbcType=VARCHAR},
      </if>
      <if test="carLongitude != null" >
        #{carLongitude,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null" >
        #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="carUptime != null" >
        #{carUptime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.henghao.domain.example.CarItudeExample" resultType="java.lang.Integer" >
    select count(*) from sa_test_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sa_test_car
    <set >
      <if test="record.carTestId != null" >
        car_test_id = #{record.carTestId,jdbcType=INTEGER},
      </if>
      <if test="record.carLatitude != null" >
        car_latitude = #{record.carLatitude,jdbcType=VARCHAR},
      </if>
      <if test="record.carLongitude != null" >
        car_longitude = #{record.carLongitude,jdbcType=VARCHAR},
      </if>
      <if test="record.carNum != null" >
        car_num = #{record.carNum,jdbcType=VARCHAR},
      </if>
      <if test="record.carUptime != null" >
        car_upTime = #{record.carUptime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sa_test_car
    set car_test_id = #{record.carTestId,jdbcType=INTEGER},
      car_latitude = #{record.carLatitude,jdbcType=VARCHAR},
      car_longitude = #{record.carLongitude,jdbcType=VARCHAR},
      car_num = #{record.carNum,jdbcType=VARCHAR},
      car_upTime = #{record.carUptime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.henghao.domain.entity.CarItude" >
    update sa_test_car
    <set >
      <if test="carLatitude != null" >
        car_latitude = #{carLatitude,jdbcType=VARCHAR},
      </if>
      <if test="carLongitude != null" >
        car_longitude = #{carLongitude,jdbcType=VARCHAR},
      </if>
      <if test="carNum != null" >
        car_num = #{carNum,jdbcType=VARCHAR},
      </if>
      <if test="carUptime != null" >
        car_upTime = #{carUptime,jdbcType=VARCHAR},
      </if>
    </set>
    where car_test_id = #{carTestId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.henghao.domain.entity.CarItude" >
    update sa_test_car
    set car_latitude = #{carLatitude,jdbcType=VARCHAR},
      car_longitude = #{carLongitude,jdbcType=VARCHAR},
      car_num = #{carNum,jdbcType=VARCHAR},
      car_upTime = #{carUptime,jdbcType=VARCHAR}
    where car_test_id = #{carTestId,jdbcType=INTEGER}
  </update>

  <!-- 逆向生成工具自带 End-->


  <!-- 自己编写 Start -->


  <!-- 自己编写 End -->
</mapper>